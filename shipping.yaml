- name: Shipping component
  hosts: shipping
  become: yes
  tasks:
    - name: Install Maven
      ansible.builtin.yum:
        name: maven
        state: installed
    
    - name: Check if roboshop cart exists
      ansible.builtin.shell: id roboshop
      register: out
      ignore_errors: true
    
    - name: Add roboshop user
      ansible.builtin.user:
        name: roboshop
      when: out.rc != 0
    
    - name: Remove /app directory if present
      ansible.builtin.file:
        path: /app
        state: absent

    - name: create /app directory
      ansible.builtin.file:
        path: /app
        state: directory

    - name: Unarchive shipping artifact
      ansible.builtin.unarchive:
        src: https://roboshop-artifacts.s3.amazonaws.com/shipping.zip 
        dest: /app
        remote_src: yes
    
    - name: Install dependencies
      ansible.builtin.shell: mvn clean package
      args:
        chdir: /app
    
    - name: rename jar file
      ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
      args:
        chdir: /app

    - name: Copy shipping service file
      ansible.builtin.copy:
        src: ./files/shipping.service
        dest: /etc/systemd/system/shipping.service
    
    - name: deamon reload
      ansible.builtin.systemd:
        daemon_reload: true
    
    - name: Install MySQL client
      ansible.builtin.yum:
        name: mysql
        state: installed
    
    - name: load mysql schema
      ansible.builtin.shell: sudo mysql -h mysql-dev.learninguser.online -uroot -pRoboShop@1 < /app/schema/shipping.sql
    
    - name: Restart shipping
      ansible.builtin.systemd:
        name: shipping
        state: restarted
        enabled: true